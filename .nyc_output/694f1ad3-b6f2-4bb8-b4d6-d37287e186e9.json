{"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/IInsightFacade.ts","sources":["C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7222c9381926276e7520854f71d3a0be93cd342b","contentHash":"923248bf18de17e9e7d70c7e26c832acc33fa6bc09d7552b204608dd677d8af5"},"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":56}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":34}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":130}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":92}},"7":{"start":{"line":19,"column":8},"end":{"line":29,"column":9}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":65}},"9":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"10":{"start":{"line":24,"column":16},"end":{"line":24,"column":28}},"11":{"start":{"line":27,"column":16},"end":{"line":27,"column":110}},"12":{"start":{"line":30,"column":8},"end":{"line":37,"column":9}},"13":{"start":{"line":31,"column":29},"end":{"line":31,"column":77}},"14":{"start":{"line":32,"column":27},"end":{"line":32,"column":56}},"15":{"start":{"line":33,"column":12},"end":{"line":33,"column":26}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":89}},"17":{"start":{"line":40,"column":8},"end":{"line":40,"column":77}},"18":{"start":{"line":43,"column":0},"end":{"line":43,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":40},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":16,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":30},"end":{"line":38,"column":5}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":25},"end":{"line":41,"column":5}},"line":39}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},{"start":{"line":23,"column":12},"end":{"line":28,"column":13}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":31,"5":28,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"f":{"0":31,"1":28,"2":3,"3":0,"4":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/InsightFacade.ts","sources":["C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/InsightFacade.ts"],"names":[],"mappings":";;AAAA,qDAAmH;AACnH,qDAAkD;AAElD,yDAAsD;AAOtD,MAAqB,aAAa;IACzB,QAAQ,CAAqB;IAErC;QACC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAiB,CAAC;IAC1C,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,OAAe,EAAE,IAAwB;QAE5E,MAAM,IAAI,KAAK,CACd,0DAA0D,EAAE,aAAa,OAAO,EAAE,MAAM,UAAU,IAAI,EAAE,CACxG,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,EAAU;QAEpC,MAAM,IAAI,KAAK,CAAC,6DAA6D,EAAE,GAAG,CAAC,CAAC;IACrF,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,KAAc;QACvC,IAAI,WAAkB,CAAC;QACvB,IAAI;YACH,WAAW,GAAG,yBAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACvC;QAAC,OAAO,KAAK,EAAE;YACf,IAAI,KAAK,YAAY,6BAAY,EAAE;gBAClC,MAAM,KAAK,CAAC;aACZ;iBAAM;gBACN,MAAM,IAAI,6BAAY,CAAC,oDAAoD,CAAC,CAAC;aAC7E;SACD;QAKD,IAAI;YACH,MAAM,QAAQ,GAAG,IAAI,6BAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC7C,OAAO,MAAM,CAAC;SACd;QAAC,OAAO,KAAK,EAAE;YACf,MAAM,IAAI,6BAAY,CAAC,4BAA4B,KAAK,EAAE,CAAC,CAAC;SAC5D;IAGF,CAAC;IAEM,KAAK,CAAC,YAAY;QAExB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;IACtE,CAAC;CACD;AAjDD,gCAiDC","sourcesContent":["import { IInsightFacade, InsightDataset, InsightDatasetKind, InsightResult, InsightError } from \"./IInsightFacade\";\nimport { QueryParser } from \"./query/QueryParser\";\nimport { Query } from \"./query/IQuery\";\nimport { QueryExecutor } from \"./query/QueryExecutor\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasets: Map<string, any[]>;\n\n\tconstructor() {\n\t\tthis.datasets = new Map<string, any[]>();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\t// TODO: Remove this once you implement the methods!\n\t\tthrow new Error(\n\t\t\t`InsightFacadeImpl::addDataset() is unimplemented! - id=${id}; content=${content?.length}; kind=${kind}`\n\t\t);\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// TODO: Remove this once you implement the methods!\n\t\tthrow new Error(`InsightFacadeImpl::removeDataset() is unimplemented! - id=${id};`);\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tlet parsedQuery: Query;\n\t\ttry {\n\t\t\tparsedQuery = QueryParser.parse(query);\n\t\t} catch (error) {\n\t\t\tif (error instanceof InsightError) {\n\t\t\t\tthrow error;\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"An unexpected error occurred during query parsing.\");\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Implement query execution using parsedQuery\n\t\t// For now, throw an error indicating that execution is not yet implemented\n\n\t\ttry {\n\t\t\tconst executor = new QueryExecutor(this.datasets);\n\t\t\tconst result = executor.execute(parsedQuery);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(`Failed to execute query: ${error}`);\n\t\t}\n\n\t\t// throw new Error(`InsightFacade::performQuery execution not implemented.`);\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\t// TODO: Remove this once you implement the methods!\n\t\tthrow new Error(`InsightFacadeImpl::listDatasets is unimplemented!`);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bbae8c2af0ecd79ddb48078c2d1ba40fd642fcd2","contentHash":"8be95c5b89df77a376a2d7ac462c49ed1e027fa3b9bd3b6cfc3c1d22a56c2295"},"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\query\\QueryParser.ts":{"path":"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\query\\QueryParser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":80}},"5":{"start":{"line":10,"column":25},"end":{"line":10,"column":30}},"6":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":93}},"8":{"start":{"line":14,"column":22},"end":{"line":14,"column":54}},"9":{"start":{"line":15,"column":24},"end":{"line":15,"column":59}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":50}},"11":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":37}},"13":{"start":{"line":22,"column":8},"end":{"line":36,"column":9}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":53}},"15":{"start":{"line":25,"column":13},"end":{"line":36,"column":9}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":46}},"17":{"start":{"line":28,"column":13},"end":{"line":36,"column":9}},"18":{"start":{"line":29,"column":12},"end":{"line":29,"column":49}},"19":{"start":{"line":31,"column":13},"end":{"line":36,"column":9}},"20":{"start":{"line":32,"column":12},"end":{"line":32,"column":49}},"21":{"start":{"line":35,"column":12},"end":{"line":35,"column":87}},"22":{"start":{"line":39,"column":25},"end":{"line":39,"column":55}},"23":{"start":{"line":40,"column":29},"end":{"line":40,"column":45}},"24":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":94}},"26":{"start":{"line":44,"column":24},"end":{"line":44,"column":84}},"27":{"start":{"line":44,"column":56},"end":{"line":44,"column":83}},"28":{"start":{"line":45,"column":8},"end":{"line":49,"column":10}},"29":{"start":{"line":52,"column":31},"end":{"line":52,"column":41}},"30":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"31":{"start":{"line":54,"column":12},"end":{"line":54,"column":77}},"32":{"start":{"line":56,"column":29},"end":{"line":56,"column":61}},"33":{"start":{"line":57,"column":8},"end":{"line":60,"column":10}},"34":{"start":{"line":63,"column":25},"end":{"line":63,"column":77}},"35":{"start":{"line":64,"column":28},"end":{"line":64,"column":44}},"36":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"37":{"start":{"line":66,"column":12},"end":{"line":66,"column":86}},"38":{"start":{"line":68,"column":21},"end":{"line":68,"column":45}},"39":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"40":{"start":{"line":70,"column":12},"end":{"line":70,"column":94}},"41":{"start":{"line":72,"column":20},"end":{"line":72,"column":27}},"42":{"start":{"line":73,"column":22},"end":{"line":73,"column":38}},"43":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"44":{"start":{"line":75,"column":12},"end":{"line":75,"column":94}},"45":{"start":{"line":77,"column":8},"end":{"line":82,"column":10}},"46":{"start":{"line":85,"column":25},"end":{"line":85,"column":29}},"47":{"start":{"line":86,"column":28},"end":{"line":86,"column":44}},"48":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"49":{"start":{"line":88,"column":12},"end":{"line":88,"column":86}},"50":{"start":{"line":90,"column":21},"end":{"line":90,"column":45}},"51":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"52":{"start":{"line":92,"column":12},"end":{"line":92,"column":94}},"53":{"start":{"line":94,"column":20},"end":{"line":94,"column":27}},"54":{"start":{"line":95,"column":22},"end":{"line":95,"column":38}},"55":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"56":{"start":{"line":97,"column":12},"end":{"line":97,"column":94}},"57":{"start":{"line":99,"column":8},"end":{"line":104,"column":10}},"58":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"59":{"start":{"line":108,"column":12},"end":{"line":108,"column":82}},"60":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"61":{"start":{"line":111,"column":12},"end":{"line":111,"column":85}},"62":{"start":{"line":113,"column":24},"end":{"line":113,"column":39}},"63":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"64":{"start":{"line":115,"column":12},"end":{"line":115,"column":90}},"65":{"start":{"line":117,"column":8},"end":{"line":121,"column":9}},"66":{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},"67":{"start":{"line":119,"column":16},"end":{"line":119,"column":94}},"68":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"69":{"start":{"line":124,"column":12},"end":{"line":124,"column":60}},"70":{"start":{"line":126,"column":8},"end":{"line":129,"column":10}},"71":{"start":{"line":132,"column":8},"end":{"line":143,"column":9}},"72":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"73":{"start":{"line":134,"column":16},"end":{"line":134,"column":89}},"74":{"start":{"line":136,"column":12},"end":{"line":136,"column":25}},"75":{"start":{"line":138,"column":13},"end":{"line":143,"column":9}},"76":{"start":{"line":139,"column":12},"end":{"line":139,"column":57}},"77":{"start":{"line":142,"column":12},"end":{"line":142,"column":92}},"78":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"79":{"start":{"line":147,"column":12},"end":{"line":147,"column":95}},"80":{"start":{"line":149,"column":20},"end":{"line":149,"column":32}},"81":{"start":{"line":150,"column":21},"end":{"line":150,"column":34}},"82":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"83":{"start":{"line":152,"column":12},"end":{"line":152,"column":89}},"84":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"85":{"start":{"line":155,"column":12},"end":{"line":155,"column":93}},"86":{"start":{"line":157,"column":8},"end":{"line":164,"column":9}},"87":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"88":{"start":{"line":159,"column":16},"end":{"line":159,"column":87}},"89":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"90":{"start":{"line":162,"column":16},"end":{"line":162,"column":90}},"91":{"start":{"line":165,"column":8},"end":{"line":168,"column":10}},"92":{"start":{"line":171,"column":0},"end":{"line":171,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":24},"end":{"line":17,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":31},"end":{"line":37,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":40},"end":{"line":50,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":41},"end":{"line":44,"column":42}},"loc":{"start":{"line":44,"column":56},"end":{"line":44,"column":83}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":33},"end":{"line":61,"column":5}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":36},"end":{"line":83,"column":5}},"line":62},"6":{"name":"(anonymous_6)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":36},"end":{"line":105,"column":5}},"line":84},"7":{"name":"(anonymous_7)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":33},"end":{"line":130,"column":5}},"line":106},"8":{"name":"(anonymous_8)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":38},"end":{"line":144,"column":5}},"line":131},"9":{"name":"(anonymous_9)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":47},"end":{"line":169,"column":5}},"line":145}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},{"start":{"line":7,"column":8},"end":{"line":9,"column":9}}],"line":7},"1":{"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":55}},"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":37}},{"start":{"line":7,"column":41},"end":{"line":7,"column":55}}],"line":7},"2":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"3":{"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":62}},"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":34}},{"start":{"line":11,"column":38},"end":{"line":11,"column":62}}],"line":11},"4":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"5":{"loc":{"start":{"line":22,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":36,"column":9}},{"start":{"line":22,"column":8},"end":{"line":36,"column":9}}],"line":22},"6":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":45}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":45}}],"line":22},"7":{"loc":{"start":{"line":25,"column":13},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":13},"end":{"line":36,"column":9}},{"start":{"line":25,"column":13},"end":{"line":36,"column":9}}],"line":25},"8":{"loc":{"start":{"line":28,"column":13},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":13},"end":{"line":36,"column":9}},{"start":{"line":28,"column":13},"end":{"line":36,"column":9}}],"line":28},"9":{"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":67}},"type":"binary-expr","locations":[{"start":{"line":28,"column":17},"end":{"line":28,"column":31}},{"start":{"line":28,"column":35},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}],"line":28},"10":{"loc":{"start":{"line":31,"column":13},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":13},"end":{"line":36,"column":9}},{"start":{"line":31,"column":13},"end":{"line":36,"column":9}}],"line":31},"11":{"loc":{"start":{"line":39,"column":25},"end":{"line":39,"column":55}},"type":"cond-expr","locations":[{"start":{"line":39,"column":43},"end":{"line":39,"column":48}},{"start":{"line":39,"column":51},"end":{"line":39,"column":55}}],"line":39},"12":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"13":{"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":69}},"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":40}},{"start":{"line":41,"column":44},"end":{"line":41,"column":69}}],"line":41},"14":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"15":{"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":73}},"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":46}},{"start":{"line":53,"column":50},"end":{"line":53,"column":73}}],"line":53},"16":{"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":77}},"type":"cond-expr","locations":[{"start":{"line":63,"column":42},"end":{"line":63,"column":46}},{"start":{"line":63,"column":49},"end":{"line":63,"column":77}}],"line":63},"17":{"loc":{"start":{"line":63,"column":49},"end":{"line":63,"column":77}},"type":"cond-expr","locations":[{"start":{"line":63,"column":66},"end":{"line":63,"column":70}},{"start":{"line":63,"column":73},"end":{"line":63,"column":77}}],"line":63},"18":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"19":{"loc":{"start":{"line":65,"column":12},"end":{"line":65,"column":67}},"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":43}},{"start":{"line":65,"column":47},"end":{"line":65,"column":67}}],"line":65},"20":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"21":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"22":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"23":{"loc":{"start":{"line":87,"column":12},"end":{"line":87,"column":67}},"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},{"start":{"line":87,"column":47},"end":{"line":87,"column":67}}],"line":87},"24":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{"line":91,"column":8},"end":{"line":93,"column":9}}],"line":91},"25":{"loc":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},{"start":{"line":96,"column":8},"end":{"line":98,"column":9}}],"line":96},"26":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"27":{"loc":{"start":{"line":107,"column":12},"end":{"line":107,"column":59}},"type":"binary-expr","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":39}},{"start":{"line":107,"column":43},"end":{"line":107,"column":59}}],"line":107},"28":{"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},{"start":{"line":110,"column":8},"end":{"line":112,"column":9}}],"line":110},"29":{"loc":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},{"start":{"line":114,"column":8},"end":{"line":116,"column":9}}],"line":114},"30":{"loc":{"start":{"line":114,"column":12},"end":{"line":114,"column":59}},"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":35}},{"start":{"line":114,"column":39},"end":{"line":114,"column":59}}],"line":114},"31":{"loc":{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},{"start":{"line":118,"column":12},"end":{"line":120,"column":13}}],"line":118},"32":{"loc":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},{"start":{"line":123,"column":8},"end":{"line":125,"column":9}}],"line":123},"33":{"loc":{"start":{"line":132,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":143,"column":9}},{"start":{"line":132,"column":8},"end":{"line":143,"column":9}}],"line":132},"34":{"loc":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},{"start":{"line":133,"column":12},"end":{"line":135,"column":13}}],"line":133},"35":{"loc":{"start":{"line":138,"column":13},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":13},"end":{"line":143,"column":9}},{"start":{"line":138,"column":13},"end":{"line":143,"column":9}}],"line":138},"36":{"loc":{"start":{"line":138,"column":17},"end":{"line":138,"column":60}},"type":"binary-expr","locations":[{"start":{"line":138,"column":17},"end":{"line":138,"column":42}},{"start":{"line":138,"column":46},"end":{"line":138,"column":60}}],"line":138},"37":{"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},{"start":{"line":146,"column":8},"end":{"line":148,"column":9}}],"line":146},"38":{"loc":{"start":{"line":146,"column":12},"end":{"line":146,"column":57}},"type":"binary-expr","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":32}},{"start":{"line":146,"column":36},"end":{"line":146,"column":57}}],"line":146},"39":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{"line":151,"column":8},"end":{"line":153,"column":9}}],"line":151},"40":{"loc":{"start":{"line":151,"column":12},"end":{"line":151,"column":42}},"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":24}},{"start":{"line":151,"column":28},"end":{"line":151,"column":42}}],"line":151},"41":{"loc":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},{"start":{"line":154,"column":8},"end":{"line":156,"column":9}}],"line":154},"42":{"loc":{"start":{"line":154,"column":12},"end":{"line":154,"column":53}},"type":"binary-expr","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":32}},{"start":{"line":154,"column":36},"end":{"line":154,"column":53}}],"line":154},"43":{"loc":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},{"start":{"line":158,"column":12},"end":{"line":160,"column":13}}],"line":158},"44":{"loc":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},{"start":{"line":161,"column":12},"end":{"line":163,"column":13}}],"line":161}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/query/QueryParser.ts","sources":["C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/query/QueryParser.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tQuery,\n\tFilter,\n\tOptions,\n\tComparison,\n\tLogicComparison,\n\tNegation,\n\t//EmptyFilter, TODO: add this :(\n\tOrder,\n\tOrderObject,\n} from \"./IQuery\";\nimport { InsightError } from \"../IInsightFacade\";\n\nexport class QueryParser {\n\tpublic static parse(query: unknown): Query {\n\t\tif (typeof query !== \"object\" || query === null) {\n\t\t\tthrow new InsightError(\"Query must be an object.\");\n\t\t}\n\n\t\tconst queryObj = query as any;\n\n\t\tif (!(\"WHERE\" in queryObj) || !(\"OPTIONS\" in queryObj)) {\n\t\t\tthrow new InsightError(\"Query must contain WHERE and OPTIONS.\");\n\t\t}\n\n\t\tconst where = this.parseFilter(queryObj.WHERE);\n\t\tconst options = this.parseOptions(queryObj.OPTIONS);\n\n\t\treturn { WHERE: where, OPTIONS: options };\n\t}\n\n\tprivate static parseFilter(filter: any): Filter {\n\t\tif (Object.keys(filter).length === 0) {\n\t\t\t// Empty WHERE clause\n\t\t\treturn { type: \"EMPTY\" };\n\t\t}\n\n\t\tif (\"AND\" in filter || \"OR\" in filter) {\n\t\t\treturn this.parseLogicComparison(filter);\n\t\t} else if (\"NOT\" in filter) {\n\t\t\treturn this.parseNegation(filter);\n\t\t} else if (\"GT\" in filter || \"LT\" in filter || \"EQ\" in filter) {\n\t\t\treturn this.parseMComparison(filter);\n\t\t} else if (\"IS\" in filter) {\n\t\t\treturn this.parseSComparison(filter);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid filter in WHERE clause.\");\n\t\t}\n\t}\n\n\tprivate static parseLogicComparison(filter: any): LogicComparison {\n\t\tconst operator = \"AND\" in filter ? \"AND\" : \"OR\";\n\t\tconst filtersArray = filter[operator];\n\n\t\tif (!Array.isArray(filtersArray) || filtersArray.length === 0) {\n\t\t\tthrow new InsightError(`${operator} must be a non-empty array.`);\n\t\t}\n\n\t\tconst filters: Filter[] = filtersArray.map((subFilter: any) => this.parseFilter(subFilter));\n\n\t\treturn {\n\t\t\ttype: \"LOGIC\",\n\t\t\toperator: operator,\n\t\t\tfilters: filters,\n\t\t};\n\t}\n\n\tprivate static parseNegation(filter: any): Negation {\n\t\tconst negationFilter = filter.NOT;\n\n\t\tif (typeof negationFilter !== \"object\" || negationFilter === null) {\n\t\t\tthrow new InsightError(\"NOT must be a filter.\");\n\t\t}\n\n\t\tconst parsedFilter = this.parseFilter(negationFilter);\n\n\t\treturn {\n\t\t\ttype: \"NOT\",\n\t\t\tfilter: parsedFilter,\n\t\t};\n\t}\n\n\tprivate static parseMComparison(filter: any): Comparison {\n\t\tconst operator = \"GT\" in filter ? \"GT\" : \"LT\" in filter ? \"LT\" : \"EQ\";\n\t\tconst mComparator = filter[operator];\n\n\t\tif (typeof mComparator !== \"object\" || mComparator === null) {\n\t\t\tthrow new InsightError(`${operator} must be an object.`);\n\t\t}\n\n\t\tconst keys = Object.keys(mComparator);\n\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(`${operator} must have exactly one key.`);\n\t\t}\n\n\t\tconst key = keys[0];\n\t\tconst value = mComparator[key];\n\n\t\tif (typeof value !== \"number\") {\n\t\t\tthrow new InsightError(`Value of ${operator} must be a number.`);\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"MCOMPARISON\",\n\t\t\tkey: key,\n\t\t\toperator: operator,\n\t\t\tvalue: value,\n\t\t};\n\t}\n\n\tprivate static parseSComparison(filter: any): Comparison {\n\t\tconst operator = \"IS\";\n\t\tconst sComparator = filter[operator];\n\n\t\tif (typeof sComparator !== \"object\" || sComparator === null) {\n\t\t\tthrow new InsightError(`${operator} must be an object.`);\n\t\t}\n\n\t\tconst keys = Object.keys(sComparator);\n\n\t\tif (keys.length !== 1) {\n\t\t\tthrow new InsightError(`${operator} must have exactly one key.`);\n\t\t}\n\n\t\tconst key = keys[0];\n\t\tconst value = sComparator[key];\n\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new InsightError(`Value of ${operator} must be a string.`);\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"SCOMPARISON\",\n\t\t\tkey: key,\n\t\t\toperator: operator,\n\t\t\tvalue: value,\n\t\t};\n\t}\n\n\tprivate static parseOptions(options: any): Options {\n\t\tif (typeof options !== \"object\" || options === null) {\n\t\t\tthrow new InsightError(\"OPTIONS must be an object.\");\n\t\t}\n\n\t\tif (!(\"COLUMNS\" in options)) {\n\t\t\tthrow new InsightError(\"OPTIONS must contain COLUMNS.\");\n\t\t}\n\n\t\tconst columns = options.COLUMNS;\n\n\t\tif (!Array.isArray(columns) || columns.length === 0) {\n\t\t\tthrow new InsightError(\"COLUMNS must be a non-empty array.\");\n\t\t}\n\n\t\tfor (const col of columns) {\n\t\t\tif (typeof col !== \"string\") {\n\t\t\t\tthrow new InsightError(\"COLUMNS must contain only strings.\");\n\t\t\t}\n\t\t}\n\n\t\tlet order: Order | undefined;\n\t\tif (\"ORDER\" in options) {\n\t\t\torder = this.parseOrder(options.ORDER, columns);\n\t\t}\n\n\t\treturn {\n\t\t\tCOLUMNS: columns,\n\t\t\tORDER: order,\n\t\t};\n\t}\n\n\tprivate static parseOrder(order: any, columns: string[]): Order {\n\t\tif (typeof order === \"string\") {\n\t\t\tif (!columns.includes(order)) {\n\t\t\t\tthrow new InsightError(\"ORDER key must be in COLUMNS.\");\n\t\t\t}\n\t\t\treturn order;\n\t\t} else if (typeof order === \"object\" && order !== null) {\n\t\t\treturn this.parseOrderObject(order, columns);\n\t\t} else {\n\t\t\tthrow new InsightError(\"ORDER must be a string or an object.\");\n\t\t}\n\t}\n\n\tprivate static parseOrderObject(orderObj: any, columns: string[]): OrderObject {\n\t\tif (!(\"dir\" in orderObj) || !(\"keys\" in orderObj)) {\n\t\t\tthrow new InsightError(\"ORDER object must contain dir and keys.\");\n\t\t}\n\n\t\tconst dir = orderObj.dir;\n\t\tconst keys = orderObj.keys;\n\n\t\tif (dir !== \"UP\" && dir !== \"DOWN\") {\n\t\t\tthrow new InsightError(\"ORDER dir must be 'UP' or 'DOWN'.\");\n\t\t}\n\n\t\tif (!Array.isArray(keys) || keys.length === 0) {\n\t\t\tthrow new InsightError(\"ORDER keys must be a non-empty array.\");\n\t\t}\n\n\t\tfor (const key of keys) {\n\t\t\tif (typeof key !== \"string\") {\n\t\t\t\tthrow new InsightError(\"ORDER keys must be strings.\");\n\t\t\t}\n\t\t\tif (!columns.includes(key)) {\n\t\t\t\tthrow new InsightError(\"ORDER keys must be in COLUMNS.\");\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdir: dir,\n\t\t\tkeys: keys,\n\t\t};\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"269f6bebe41c0dc51ad86a0097d35f46565e3512","contentHash":"a358b44cb2c8306d76778feafff0f06d034bfe387b656e7455ffa9dbd8855982"},"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\query\\QueryExecutor.ts":{"path":"C:\\Users\\Enzo\\Documents\\Enzo\\UBC\\Year 3\\Term 1\\Cpsc 310\\teamfolder\\project_team165\\src\\controller\\query\\QueryExecutor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":53}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"4":{"start":{"line":11,"column":21},"end":{"line":11,"column":51}},"5":{"start":{"line":12,"column":29},"end":{"line":12,"column":64}},"6":{"start":{"line":13,"column":23},"end":{"line":13,"column":69}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":22}},"8":{"start":{"line":17,"column":27},"end":{"line":17,"column":56}},"9":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"10":{"start":{"line":19,"column":12},"end":{"line":19,"column":97}},"11":{"start":{"line":21,"column":26},"end":{"line":21,"column":51}},"12":{"start":{"line":22,"column":24},"end":{"line":22,"column":52}},"13":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":87}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":23}},"16":{"start":{"line":29,"column":27},"end":{"line":29,"column":36}},"17":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"18":{"start":{"line":31,"column":25},"end":{"line":31,"column":42}},"19":{"start":{"line":32,"column":12},"end":{"line":32,"column":31}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":66}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"22":{"start":{"line":38,"column":8},"end":{"line":51,"column":9}},"23":{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},"24":{"start":{"line":41,"column":25},"end":{"line":41,"column":46}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":31}},"26":{"start":{"line":44,"column":13},"end":{"line":51,"column":9}},"27":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"28":{"start":{"line":46,"column":16},"end":{"line":46,"column":72}},"29":{"start":{"line":49,"column":13},"end":{"line":51,"column":9}},"30":{"start":{"line":50,"column":12},"end":{"line":50,"column":72}},"31":{"start":{"line":54,"column":8},"end":{"line":70,"column":9}},"32":{"start":{"line":55,"column":12},"end":{"line":55,"column":24}},"33":{"start":{"line":57,"column":13},"end":{"line":70,"column":9}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":80}},"35":{"start":{"line":58,"column":41},"end":{"line":58,"column":78}},"36":{"start":{"line":60,"column":13},"end":{"line":70,"column":9}},"37":{"start":{"line":61,"column":12},"end":{"line":61,"column":52}},"38":{"start":{"line":63,"column":13},"end":{"line":70,"column":9}},"39":{"start":{"line":64,"column":33},"end":{"line":64,"column":70}},"40":{"start":{"line":65,"column":32},"end":{"line":65,"column":53}},"41":{"start":{"line":66,"column":12},"end":{"line":66,"column":65}},"42":{"start":{"line":66,"column":41},"end":{"line":66,"column":63}},"43":{"start":{"line":69,"column":12},"end":{"line":69,"column":76}},"44":{"start":{"line":73,"column":26},"end":{"line":73,"column":46}},"45":{"start":{"line":74,"column":32},"end":{"line":74,"column":48}},"46":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"47":{"start":{"line":76,"column":12},"end":{"line":76,"column":108}},"48":{"start":{"line":78,"column":8},"end":{"line":92,"column":9}},"49":{"start":{"line":79,"column":12},"end":{"line":79,"column":47}},"50":{"start":{"line":81,"column":13},"end":{"line":92,"column":9}},"51":{"start":{"line":82,"column":12},"end":{"line":82,"column":47}},"52":{"start":{"line":84,"column":13},"end":{"line":92,"column":9}},"53":{"start":{"line":85,"column":12},"end":{"line":85,"column":49}},"54":{"start":{"line":87,"column":13},"end":{"line":92,"column":9}},"55":{"start":{"line":88,"column":12},"end":{"line":88,"column":63}},"56":{"start":{"line":91,"column":12},"end":{"line":91,"column":84}},"57":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"58":{"start":{"line":96,"column":12},"end":{"line":96,"column":25}},"59":{"start":{"line":98,"column":31},"end":{"line":98,"column":78}},"60":{"start":{"line":99,"column":29},"end":{"line":99,"column":76}},"61":{"start":{"line":100,"column":22},"end":{"line":100,"column":46}},"62":{"start":{"line":101,"column":8},"end":{"line":101,"column":33}},"63":{"start":{"line":104,"column":8},"end":{"line":121,"column":9}},"64":{"start":{"line":105,"column":12},"end":{"line":107,"column":21}},"65":{"start":{"line":106,"column":16},"end":{"line":106,"column":63}},"66":{"start":{"line":109,"column":13},"end":{"line":121,"column":9}},"67":{"start":{"line":110,"column":30},"end":{"line":110,"column":39}},"68":{"start":{"line":111,"column":12},"end":{"line":116,"column":13}},"69":{"start":{"line":112,"column":37},"end":{"line":112,"column":67}},"70":{"start":{"line":113,"column":16},"end":{"line":115,"column":17}},"71":{"start":{"line":114,"column":20},"end":{"line":114,"column":40}},"72":{"start":{"line":117,"column":12},"end":{"line":117,"column":41}},"73":{"start":{"line":120,"column":12},"end":{"line":120,"column":79}},"74":{"start":{"line":124,"column":21},"end":{"line":130,"column":10}},"75":{"start":{"line":125,"column":31},"end":{"line":125,"column":33}},"76":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"77":{"start":{"line":127,"column":16},"end":{"line":127,"column":50}},"78":{"start":{"line":129,"column":12},"end":{"line":129,"column":30}},"79":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"80":{"start":{"line":132,"column":12},"end":{"line":132,"column":60}},"81":{"start":{"line":134,"column":8},"end":{"line":134,"column":22}},"82":{"start":{"line":137,"column":8},"end":{"line":152,"column":9}},"83":{"start":{"line":138,"column":24},"end":{"line":138,"column":29}},"84":{"start":{"line":139,"column":12},"end":{"line":139,"column":68}},"85":{"start":{"line":139,"column":32},"end":{"line":139,"column":66}},"86":{"start":{"line":142,"column":34},"end":{"line":142,"column":39}},"87":{"start":{"line":143,"column":12},"end":{"line":151,"column":15}},"88":{"start":{"line":144,"column":16},"end":{"line":149,"column":17}},"89":{"start":{"line":145,"column":39},"end":{"line":145,"column":73}},"90":{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},"91":{"start":{"line":147,"column":24},"end":{"line":147,"column":71}},"92":{"start":{"line":150,"column":16},"end":{"line":150,"column":25}},"93":{"start":{"line":153,"column":8},"end":{"line":153,"column":20}},"94":{"start":{"line":156,"column":8},"end":{"line":164,"column":9}},"95":{"start":{"line":157,"column":12},"end":{"line":157,"column":22}},"96":{"start":{"line":159,"column":13},"end":{"line":164,"column":9}},"97":{"start":{"line":160,"column":12},"end":{"line":160,"column":21}},"98":{"start":{"line":163,"column":12},"end":{"line":163,"column":21}},"99":{"start":{"line":167,"column":0},"end":{"line":167,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":26},"end":{"line":9,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":19},"end":{"line":15,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":30},"end":{"line":27,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":29},"end":{"line":36,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":52},"end":{"line":52,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":30},"end":{"line":71,"column":5}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":58,"column":31},"end":{"line":58,"column":32}},"loc":{"start":{"line":58,"column":41},"end":{"line":58,"column":78}},"line":58},"7":{"name":"(anonymous_7)","decl":{"start":{"line":66,"column":31},"end":{"line":66,"column":32}},"loc":{"start":{"line":66,"column":41},"end":{"line":66,"column":63}},"line":66},"8":{"name":"(anonymous_8)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":41},"end":{"line":93,"column":5}},"line":72},"9":{"name":"(anonymous_9)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":31},"end":{"line":102,"column":5}},"line":94},"10":{"name":"(anonymous_10)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":31},"end":{"line":122,"column":5}},"line":103},"11":{"name":"(anonymous_11)","decl":{"start":{"line":105,"column":40},"end":{"line":105,"column":41}},"loc":{"start":{"line":105,"column":67},"end":{"line":107,"column":13}},"line":105},"12":{"name":"(anonymous_12)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":32},"end":{"line":135,"column":5}},"line":123},"13":{"name":"(anonymous_13)","decl":{"start":{"line":124,"column":30},"end":{"line":124,"column":31}},"loc":{"start":{"line":124,"column":40},"end":{"line":130,"column":9}},"line":124},"14":{"name":"(anonymous_14)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":28},"end":{"line":154,"column":5}},"line":136},"15":{"name":"(anonymous_15)","decl":{"start":{"line":139,"column":22},"end":{"line":139,"column":23}},"loc":{"start":{"line":139,"column":32},"end":{"line":139,"column":66}},"line":139},"16":{"name":"(anonymous_16)","decl":{"start":{"line":143,"column":22},"end":{"line":143,"column":23}},"loc":{"start":{"line":143,"column":32},"end":{"line":151,"column":13}},"line":143},"17":{"name":"(anonymous_17)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":34},"end":{"line":165,"column":5}},"line":155}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"1":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"2":{"loc":{"start":{"line":38,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":51,"column":9}},{"start":{"line":38,"column":8},"end":{"line":51,"column":9}}],"line":38},"3":{"loc":{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":51,"column":9}},{"start":{"line":40,"column":13},"end":{"line":51,"column":9}}],"line":40},"4":{"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":79}},"type":"binary-expr","locations":[{"start":{"line":40,"column":17},"end":{"line":40,"column":46}},{"start":{"line":40,"column":50},"end":{"line":40,"column":79}}],"line":40},"5":{"loc":{"start":{"line":44,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":51,"column":9}},{"start":{"line":44,"column":13},"end":{"line":51,"column":9}}],"line":44},"6":{"loc":{"start":{"line":49,"column":13},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":13},"end":{"line":51,"column":9}},{"start":{"line":49,"column":13},"end":{"line":51,"column":9}}],"line":49},"7":{"loc":{"start":{"line":54,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":70,"column":9}},{"start":{"line":54,"column":8},"end":{"line":70,"column":9}}],"line":54},"8":{"loc":{"start":{"line":57,"column":13},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":13},"end":{"line":70,"column":9}},{"start":{"line":57,"column":13},"end":{"line":70,"column":9}}],"line":57},"9":{"loc":{"start":{"line":57,"column":17},"end":{"line":57,"column":79}},"type":"binary-expr","locations":[{"start":{"line":57,"column":17},"end":{"line":57,"column":46}},{"start":{"line":57,"column":50},"end":{"line":57,"column":79}}],"line":57},"10":{"loc":{"start":{"line":60,"column":13},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":13},"end":{"line":70,"column":9}},{"start":{"line":60,"column":13},"end":{"line":70,"column":9}}],"line":60},"11":{"loc":{"start":{"line":63,"column":13},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":13},"end":{"line":70,"column":9}},{"start":{"line":63,"column":13},"end":{"line":70,"column":9}}],"line":63},"12":{"loc":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":8},"end":{"line":77,"column":9}}],"line":75},"13":{"loc":{"start":{"line":78,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":92,"column":9}},{"start":{"line":78,"column":8},"end":{"line":92,"column":9}}],"line":78},"14":{"loc":{"start":{"line":81,"column":13},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":13},"end":{"line":92,"column":9}},{"start":{"line":81,"column":13},"end":{"line":92,"column":9}}],"line":81},"15":{"loc":{"start":{"line":84,"column":13},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":13},"end":{"line":92,"column":9}},{"start":{"line":84,"column":13},"end":{"line":92,"column":9}}],"line":84},"16":{"loc":{"start":{"line":87,"column":13},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":13},"end":{"line":92,"column":9}},{"start":{"line":87,"column":13},"end":{"line":92,"column":9}}],"line":87},"17":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":8},"end":{"line":97,"column":9}}],"line":95},"18":{"loc":{"start":{"line":104,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":121,"column":9}},{"start":{"line":104,"column":8},"end":{"line":121,"column":9}}],"line":104},"19":{"loc":{"start":{"line":109,"column":13},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":13},"end":{"line":121,"column":9}},{"start":{"line":109,"column":13},"end":{"line":121,"column":9}}],"line":109},"20":{"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},{"start":{"line":131,"column":8},"end":{"line":133,"column":9}}],"line":131},"21":{"loc":{"start":{"line":137,"column":8},"end":{"line":152,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":152,"column":9}},{"start":{"line":137,"column":8},"end":{"line":152,"column":9}}],"line":137},"22":{"loc":{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},"type":"if","locations":[{"start":{"line":146,"column":20},"end":{"line":148,"column":21}},{"start":{"line":146,"column":20},"end":{"line":148,"column":21}}],"line":146},"23":{"loc":{"start":{"line":147,"column":31},"end":{"line":147,"column":70}},"type":"cond-expr","locations":[{"start":{"line":147,"column":46},"end":{"line":147,"column":56}},{"start":{"line":147,"column":59},"end":{"line":147,"column":70}}],"line":147},"24":{"loc":{"start":{"line":156,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":164,"column":9}},{"start":{"line":156,"column":8},"end":{"line":164,"column":9}}],"line":156},"25":{"loc":{"start":{"line":159,"column":13},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":159,"column":13},"end":{"line":164,"column":9}},{"start":{"line":159,"column":13},"end":{"line":164,"column":9}}],"line":159}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/query/QueryExecutor.ts","sources":["C:/Users/Enzo/Documents/Enzo/UBC/Year 3/Term 1/Cpsc 310/teamfolder/project_team165/src/controller/query/QueryExecutor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Query, Filter, Options, Comparison, LogicComparison, OrderObject } from \"./IQuery\"; // removed Negation for testing purposes.\nimport { InsightResult, InsightError } from \"../IInsightFacade\";\n\nexport class QueryExecutor {\n\tprivate datasets: Map<string, any[]>;\n\n\tconstructor(datasets: Map<string, any[]>) {\n\t\tthis.datasets = datasets;\n\t}\n\n\tpublic execute(query: Query): InsightResult[] {\n\t\tconst data = this.getRelevantDataset(query);\n\n\t\tconst filteredData = this.applyFilter(query.WHERE, data);\n\n\t\tconst result = this.applyOptions(filteredData, query.OPTIONS);\n\n\t\treturn result;\n\t}\n\n\tprivate getRelevantDataset(query: Query): any[] {\n\t\tconst datasetIds = this.extractDatasetIds(query);\n\n\t\tif (datasetIds.size !== 1) {\n\t\t\tthrow new InsightError(\"Query must reference exactly one dataset.\");\n\t\t}\n\n\t\tconst datasetId = Array.from(datasetIds)[0];\n\n\t\tconst dataset = this.datasets.get(datasetId);\n\n\t\tif (!dataset) {\n\t\t\tthrow new InsightError(`Dataset ${datasetId} not found.`);\n\t\t}\n\n\t\treturn dataset;\n\t}\n\n\tprivate extractDatasetIds(query: Query): Set<string> {\n\t\tconst datasetIds = new Set<string>();\n\n\t\t// Extract dataset IDs from COLUMNS\n\t\tfor (const column of query.OPTIONS.COLUMNS) {\n\t\t\tconst [id] = column.split(\"_\");\n\t\t\tdatasetIds.add(id);\n\t\t}\n\n\t\t// Extract dataset IDs from WHERE clause\n\t\tthis.collectDatasetIdsFromFilter(query.WHERE, datasetIds);\n\n\t\treturn datasetIds;\n\t}\n\n\tprivate collectDatasetIdsFromFilter(filter: Filter, datasetIds: Set<string>): void {\n\t\tif (filter.type === \"EMPTY\") {\n\t\t\t// Do nothing\n\t\t} else if (filter.type === \"MCOMPARISON\" || filter.type === \"SCOMPARISON\") {\n\t\t\tconst [id] = filter.key.split(\"_\");\n\t\t\tdatasetIds.add(id);\n\t\t} else if (filter.type === \"LOGIC\") {\n\t\t\tfor (const subFilter of filter.filters) {\n\t\t\t\tthis.collectDatasetIdsFromFilter(subFilter, datasetIds);\n\t\t\t}\n\t\t} else if (filter.type === \"NOT\") {\n\t\t\tthis.collectDatasetIdsFromFilter(filter.filter, datasetIds);\n\t\t}\n\t}\n\n\tprivate applyFilter(filter: Filter, data: any[]): any[] {\n\t\tif (filter.type === \"EMPTY\") {\n\t\t\treturn data;\n\t\t} else if (filter.type === \"MCOMPARISON\" || filter.type === \"SCOMPARISON\") {\n\t\t\treturn data.filter((item) => this.evaluateComparison(filter as Comparison, item));\n\t\t} else if (filter.type === \"LOGIC\") {\n\t\t\treturn this.evaluateLogic(filter as LogicComparison, data);\n\t\t} else if (filter.type === \"NOT\") {\n\t\t\tconst includedData = this.applyFilter(filter.filter, data);\n\t\t\tconst excludedSet = new Set(includedData);\n\t\t\treturn data.filter((item) => !excludedSet.has(item));\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid filter type.\");\n\t\t}\n\t}\n\n\tprivate evaluateComparison(comparison: Comparison, item: any): boolean {\n\t\tconst itemValue = item[comparison.key];\n\t\tconst comparisonValue = comparison.value;\n\n\t\tif (itemValue === undefined) {\n\t\t\tthrow new InsightError(`Key ${comparison.key} does not exist in the dataset.`);\n\t\t}\n\n\t\tif (comparison.operator === \"GT\") {\n\t\t\treturn itemValue > comparisonValue;\n\t\t} else if (comparison.operator === \"LT\") {\n\t\t\treturn itemValue < comparisonValue;\n\t\t} else if (comparison.operator === \"EQ\") {\n\t\t\treturn itemValue === comparisonValue;\n\t\t} else if (comparison.operator === \"IS\") {\n\t\t\treturn this.evaluateIs(comparisonValue as string, itemValue);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid comparison operator.\");\n\t\t}\n\t}\n\n\tprivate evaluateIs(pattern: string, value: any): boolean {\n\t\tif (typeof value !== \"string\") {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst escapedPattern = pattern.replace(/([.+?^${}()|[\\]\\\\])/g, \"\\\\$1\");\n\t\tconst regexPattern = \"^\" + escapedPattern.replace(/\\*/g, \".*\") + \"$\";\n\t\tconst regex = new RegExp(regexPattern);\n\n\t\treturn regex.test(value);\n\t}\n\n\tprivate evaluateLogic(logic: LogicComparison, data: any[]): any[] {\n\t\tif (logic.operator === \"AND\") {\n\t\t\treturn logic.filters.reduce((result, currentFilter) => {\n\t\t\t\treturn this.applyFilter(currentFilter, result);\n\t\t\t}, data);\n\t\t} else if (logic.operator === \"OR\") {\n\t\t\tconst resultSet = new Set<any>();\n\t\t\tfor (const filter of logic.filters) {\n\t\t\t\tconst filteredData = this.applyFilter(filter, data);\n\t\t\t\tfor (const item of filteredData) {\n\t\t\t\t\tresultSet.add(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Array.from(resultSet);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid logic operator.\");\n\t\t}\n\t}\n\n\tprivate applyOptions(data: any[], options: Options): InsightResult[] {\n\t\tlet result = data.map((item) => {\n\t\t\tconst resultItem: InsightResult = {};\n\t\t\tfor (const column of options.COLUMNS) {\n\t\t\t\tresultItem[column] = item[column];\n\t\t\t}\n\t\t\treturn resultItem;\n\t\t});\n\n\t\tif (options.ORDER) {\n\t\t\tresult = this.applyOrder(result, options.ORDER);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate applyOrder(data: InsightResult[], order: string | OrderObject): InsightResult[] {\n\t\tif (typeof order === \"string\") {\n\t\t\tconst key = order;\n\t\t\tdata.sort((a, b) => this.compareValues(a[key], b[key]));\n\t\t} else {\n\t\t\tconst { dir, keys } = order;\n\t\t\tdata.sort((a, b) => {\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tconst comparison = this.compareValues(a[key], b[key]);\n\t\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\t\treturn dir === \"UP\" ? comparison : -comparison;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate compareValues(valueA: any, valueB: any): number {\n\t\tif (valueA < valueB) {\n\t\t\treturn -1;\n\t\t} else if (valueA > valueB) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"57348e26a53f44154402117b8bb5c39a5c727b42","contentHash":"f7a3033a63a66a01c441164badbd4a7eae4842aa69e23ed4bdd44176d0667c74"}}